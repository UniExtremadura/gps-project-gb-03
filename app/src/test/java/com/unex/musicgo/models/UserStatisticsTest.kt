package com.unex.musicgo.models

import org.junit.jupiter.api.Assertions.*
import org.junit.jupiter.api.DisplayName
import org.junit.jupiter.api.Test

class UserStatisticsTest {

    @Test
    @DisplayName("Test UserStatistics Creation")
    fun createUserStatisticsObject() {
        val userStatistics = UserStatistics(
            songId = "123",
            title = "Song Title",
            artist = "Artist",
            plays = 10,
            timePlayed = 60000
        )

        assertNotNull(userStatistics)
        assertEquals("123", userStatistics.songId)
        assertEquals("Song Title", userStatistics.title)
        assertEquals("Artist", userStatistics.artist)
        assertEquals(10, userStatistics.plays)
        assertEquals(60000, userStatistics.timePlayed)
    }

    @Test
    @DisplayName("Test Default Values")
    fun defaultValuesAreSet() {
        val userStatistics = UserStatistics(
            songId = "456",
            title = "Default Song",
            artist = "Default Artist"
        )

        assertNotNull(userStatistics)
        assertEquals("456", userStatistics.songId)
        assertEquals("Default Song", userStatistics.title)
        assertEquals("Default Artist", userStatistics.artist)
        assertEquals(0, userStatistics.plays) // Since it's 0 by default
        assertEquals(0, userStatistics.timePlayed) // Since it's 0 by default
    }

    @Test
    @DisplayName("Test Auto-Generated ID")
    fun checkAutoGeneratedId() {
        val userStatistics1 = UserStatistics(songId = "789", title = "Song 1", artist = "Artist 1")
        val userStatistics2 = UserStatistics(songId = "101", title = "Song 2", artist = "Artist 2")

        assertNotNull(userStatistics1.songId)
        assertNotNull(userStatistics2.songId)
        assertNotEquals(userStatistics1.songId, userStatistics2.songId) // IDs should be different
    }

    @Test
    @DisplayName("Test check user statistics equality")
    fun checkUserStatisticsEquality() {
        val userStatistics1 = UserStatistics(songId = "111", title = "Song", artist = "Artist", plays = 5, timePlayed = 30000)
        val userStatistics2 = UserStatistics(songId = "111", title = "Song", artist = "Artist", plays = 5, timePlayed = 30000)

        assertEquals(userStatistics1, userStatistics2) // UserStatistics with the same ID should be equal
    }

    @Test
    @DisplayName("Test check user statistics inequality")
    fun checkUserStatisticsInequality() {
        val userStatistics1 = UserStatistics(songId = "222", title = "Song 1", artist = "Artist 1", plays = 10, timePlayed = 60000)
        val userStatistics2 = UserStatistics(songId = "333", title = "Song 2", artist = "Artist 2", plays = 15, timePlayed = 90000)

        assertNotEquals(userStatistics1, userStatistics2) // UserStatistics with different IDs should not be equal
    }
}
